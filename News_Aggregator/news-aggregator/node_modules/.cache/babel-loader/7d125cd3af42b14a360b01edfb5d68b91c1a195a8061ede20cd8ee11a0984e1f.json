{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kojo\\\\OneDrive\\\\Documents\\\\compsci\\\\personal\\\\NewsAggregator\\\\News_Aggregator\\\\news-aggregator\\\\src\\\\components\\\\CarouselRow.tsx\";\nimport React from \"react\";\nimport NewsCard from \"./NewsCard\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CarouselRow = ({\n  articles\n}) => {\n  // Function to chunk the articles array into groups of three\n  const chunkedArticles = (articles, size) => {\n    const chunkedArr = [];\n    let index = 0;\n    while (index < articles.length) {\n      chunkedArr.push(articles.slice(index, size + index));\n      index += size;\n    }\n    return chunkedArr;\n  };\n\n  // Creating chunks of articles\n  const articleChunks = chunkedArticles(articles, 5);\n  return /*#__PURE__*/_jsxDEV(Carousel, {\n    className: \"ca\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-wrapper\",\n      children: articleChunks.map((chunk, idx) => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n        className: \"carousell\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex\",\n          children: [\" \", chunk.map((article, index) => /*#__PURE__*/_jsxDEV(NewsCard, {\n            article: article\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = CarouselRow;\nexport default CarouselRow;\nvar _c;\n$RefreshReg$(_c, \"CarouselRow\");","map":{"version":3,"names":["React","NewsCard","Carousel","jsxDEV","_jsxDEV","CarouselRow","articles","chunkedArticles","size","chunkedArr","index","length","push","slice","articleChunks","className","children","map","chunk","idx","Item","article","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Kojo/OneDrive/Documents/compsci/personal/NewsAggregator/News_Aggregator/news-aggregator/src/components/CarouselRow.tsx"],"sourcesContent":["import React from \"react\";\r\nimport NewsCard from \"./NewsCard\";\r\nimport { Article } from \"../types\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\n\r\ninterface CarouselRowProps {\r\n  articles: Article[];\r\n}\r\n\r\nconst CarouselRow = ({ articles }: CarouselRowProps) => {\r\n  // Function to chunk the articles array into groups of three\r\n  const chunkedArticles = (articles: Article[], size: number) => {\r\n    const chunkedArr = [];\r\n    let index = 0;\r\n    while (index < articles.length) {\r\n      chunkedArr.push(articles.slice(index, size + index));\r\n      index += size;\r\n    }\r\n    return chunkedArr;\r\n  };\r\n\r\n  // Creating chunks of articles\r\n  const articleChunks = chunkedArticles(articles, 5);\r\n\r\n  return (\r\n    <Carousel className=\"ca\">\r\n      <div className=\"cards-wrapper\">\r\n        {articleChunks.map((chunk, idx) => (\r\n          <Carousel.Item key={idx} className=\"carousell\">\r\n            <div className=\"d-flex\">\r\n              {\" \"}\r\n              {/* Ensure this div has appropriate styling for card layout */}\r\n              {chunk.map((article, index) => (\r\n                <NewsCard key={index} article={article} />\r\n              ))}\r\n            </div>\r\n          </Carousel.Item>\r\n        ))}\r\n      </div>\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default CarouselRow;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAEjC,OAAOC,QAAQ,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMhD,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAA2B,CAAC,KAAK;EACtD;EACA,MAAMC,eAAe,GAAGA,CAACD,QAAmB,EAAEE,IAAY,KAAK;IAC7D,MAAMC,UAAU,GAAG,EAAE;IACrB,IAAIC,KAAK,GAAG,CAAC;IACb,OAAOA,KAAK,GAAGJ,QAAQ,CAACK,MAAM,EAAE;MAC9BF,UAAU,CAACG,IAAI,CAACN,QAAQ,CAACO,KAAK,CAACH,KAAK,EAAEF,IAAI,GAAGE,KAAK,CAAC,CAAC;MACpDA,KAAK,IAAIF,IAAI;IACf;IACA,OAAOC,UAAU;EACnB,CAAC;;EAED;EACA,MAAMK,aAAa,GAAGP,eAAe,CAACD,QAAQ,EAAE,CAAC,CAAC;EAElD,oBACEF,OAAA,CAACF,QAAQ;IAACa,SAAS,EAAC,IAAI;IAAAC,QAAA,eACtBZ,OAAA;MAAKW,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BF,aAAa,CAACG,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,kBAC5Bf,OAAA,CAACF,QAAQ,CAACkB,IAAI;QAAWL,SAAS,EAAC,WAAW;QAAAC,QAAA,eAC5CZ,OAAA;UAAKW,SAAS,EAAC,QAAQ;UAAAC,QAAA,GACpB,GAAG,EAEHE,KAAK,CAACD,GAAG,CAAC,CAACI,OAAO,EAAEX,KAAK,kBACxBN,OAAA,CAACH,QAAQ;YAAaoB,OAAO,EAAEA;UAAQ,GAAxBX,KAAK;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAqB,CAC1C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC,GAPYN,GAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQR,CAChB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEf,CAAC;AAACC,EAAA,GAhCIrB,WAAW;AAkCjB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}